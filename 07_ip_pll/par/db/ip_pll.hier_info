|ip_pll
sys_clk => sys_clk.IN1
sys_rst_n => _.IN1
clk_100m << pll_clk:u_pll_clk.c0
clk_100m_180deg << pll_clk:u_pll_clk.c1
clk_50m << pll_clk:u_pll_clk.c2
clk_25m << pll_clk:u_pll_clk.c3


|ip_pll|pll_clk:u_pll_clk
areset => altpll:altpll_component.areset
inclk0 => altpll:altpll_component.inclk[0]
phasecounterselect[0] => altpll:altpll_component.phasecounterselect[0]
phasecounterselect[1] => altpll:altpll_component.phasecounterselect[1]
phasecounterselect[2] => altpll:altpll_component.phasecounterselect[2]
phasestep => altpll:altpll_component.phasestep
phaseupdown => altpll:altpll_component.phaseupdown
scanclk => altpll:altpll_component.scanclk
c0 <= altpll:altpll_component.clk[0]
c1 <= altpll:altpll_component.clk[1]
c2 <= altpll:altpll_component.clk[2]
c3 <= altpll:altpll_component.clk[3]
locked <= altpll:altpll_component.locked
phasedone <= altpll:altpll_component.phasedone


|ip_pll|pll_clk:u_pll_clk|altpll:altpll_component
inclk[0] => pll_clk_altpll:auto_generated.inclk[0]
inclk[1] => pll_clk_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => pll_clk_altpll:auto_generated.areset
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => pll_clk_altpll:auto_generated.scanclk
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => pll_clk_altpll:auto_generated.phasecounterselect[0]
phasecounterselect[1] => pll_clk_altpll:auto_generated.phasecounterselect[1]
phasecounterselect[2] => pll_clk_altpll:auto_generated.phasecounterselect[2]
phaseupdown => pll_clk_altpll:auto_generated.phaseupdown
phasestep => pll_clk_altpll:auto_generated.phasestep
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= pll_clk_altpll:auto_generated.locked
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= pll_clk_altpll:auto_generated.phasedone
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|ip_pll|pll_clk:u_pll_clk|altpll:altpll_component|pll_clk_altpll:auto_generated
areset => comb.IN0
areset => pll_lock_sync.ACLR
areset => phasedone_state.ACLR
areset => internal_phasestep.ACLR
areset => pll1.ARESET
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1
locked <= locked.DB_MAX_OUTPUT_PORT_TYPE
phasecounterselect[0] => remap_decoy_le3a_0.DATAIN
phasecounterselect[1] => remap_decoy_le3a_1.DATAIN
phasecounterselect[2] => remap_decoy_le3a_2.DATAIN
phasedone <= phasedone.DB_MAX_OUTPUT_PORT_TYPE
phasestep => comb.IN1
phaseupdown => pll1.PHASEUPDOWN
scanclk => scanclk.IN2


|ip_pll|pll_clk:u_pll_clk|altpll:altpll_component|pll_clk_altpll:auto_generated|pll_clk_altpll_dyn_phase_le:altpll_dyn_phase_le2
combout <= le_comb8.COMBOUT
dataa => le_comb8.DATAA
datab => le_comb8.DATAB
datac => le_comb8.DATAC
datad => ~NO_FANOUT~


|ip_pll|pll_clk:u_pll_clk|altpll:altpll_component|pll_clk_altpll:auto_generated|pll_clk_altpll_dyn_phase_le1:altpll_dyn_phase_le4
combout <= le_comb9.COMBOUT
dataa => le_comb9.DATAA
datab => le_comb9.DATAB
datac => le_comb9.DATAC
datad => ~NO_FANOUT~


|ip_pll|pll_clk:u_pll_clk|altpll:altpll_component|pll_clk_altpll:auto_generated|pll_clk_altpll_dyn_phase_le12:altpll_dyn_phase_le5
combout <= le_comb10.COMBOUT
dataa => le_comb10.DATAA
datab => le_comb10.DATAB
datac => le_comb10.DATAC
datad => ~NO_FANOUT~


|ip_pll|pll_clk:u_pll_clk|altpll:altpll_component|pll_clk_altpll:auto_generated|pll_clk_cntr:phasestep_counter
clock => counter_reg_bit[1].CLK
clock => counter_reg_bit[0].CLK
cnt_en => counter_reg_bit.OUTPUTSELECT
cnt_en => counter_reg_bit.OUTPUTSELECT
q[0] <= safe_q[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= safe_q[1].DB_MAX_OUTPUT_PORT_TYPE


|ip_pll|pll_clk:u_pll_clk|altpll:altpll_component|pll_clk_altpll:auto_generated|pll_clk_cntr:phasestep_counter|pll_clk_cmpr:cmpr12
aeb <= aneb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => aneb_result_wire.IN0
dataa[1] => aneb_result_wire.IN0
datab[0] => aneb_result_wire.IN1
datab[1] => aneb_result_wire.IN1


|ip_pll|pll_clk:u_pll_clk|altpll:altpll_component|pll_clk_altpll:auto_generated|pll_clk_cntr1:pll_internal_phasestep
aclr => counter_reg_bit[2].ACLR
aclr => counter_reg_bit[1].ACLR
aclr => counter_reg_bit[0].ACLR
clock => counter_reg_bit[2].CLK
clock => counter_reg_bit[1].CLK
clock => counter_reg_bit[0].CLK
cnt_en => counter_reg_bit.OUTPUTSELECT
cnt_en => counter_reg_bit.OUTPUTSELECT
cnt_en => counter_reg_bit.OUTPUTSELECT
q[0] <= safe_q[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= safe_q[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= safe_q[2].DB_MAX_OUTPUT_PORT_TYPE


|ip_pll|pll_clk:u_pll_clk|altpll:altpll_component|pll_clk_altpll:auto_generated|pll_clk_cntr1:pll_internal_phasestep|pll_clk_cmpr1:cmpr14
aeb <= aneb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => data_wire.IN0
dataa[1] => data_wire.IN0
dataa[2] => data_wire[1].IN0
datab[0] => data_wire.IN1
datab[1] => data_wire.IN1
datab[2] => data_wire[1].IN1


